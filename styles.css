/* Color Pallet - Main: #4A5D23 - Accents: #678231, #5D5323 */

/* TODO: 
- Desktop version layout
- Start looking at styling the actual content
  - Look at getcoding design guide
  - Keep *old look* but with more modern features
  - Look at old console color pallets for ideas
- Clean code
  - Better comments and clean old ones/out-dated comments
- Start using more classes now that I have a better understanding
- Rename and replace outdated names
- Go through the game a few times and note broken features
  - Fix bugs that fully break gameplay first
  - Start thinking about enemy generation
  - Start thinking about balancing
- Design generic enemy and characters
- Resize images now that I know more about them
- Figure out a good background idea for the character sprites

TODO EXTRA:
- Better action indicators, maybe a hit splat or more flashy text
- Look more into border images so I can maybe make my own backgrounds?
*/

* {
  margin: 0;
  padding: 0;
}

html {
    height: 100vh;
    background-color: #5D5323;
}

body {
    height: 100vh;

}


/* ---------- START DROPDOWN ----------- */

.dropbtn {
  background-color: #4A5D23;
  color: white;
  margin-left: 2vw;

  cursor: pointer;
  position: absolute;
  
  font-size: 12px;
  padding: 6px;
  border: none;
  border-radius: 50%;
  
}

/* Dropdown button on hover & focus */
.dropbtn:hover, .dropbtn:focus {
  background-color: #678231
}

.dropdown {
  position: relative;
  display: inline-block;
  
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
  display: none;
  position: absolute;

  background-color: #f1f1f1;
  opacity: 80%;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

/* Links inside the dropdown */
.dropdown-content a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover {background-color: #ddd;}

/* Show the dropdown menu */
.show {display:block;}

/* ----------- END DROPDOWN ------------ */

/* TODO: ground stylings together and style based on class
not ID's
*/

@media only screen and (max-width:1080px) {
  html {
    background-color: #5D5323;
  }
  body {
    height: 100%;
  }
  #main {
    background-color: #4A5D23;
    display: flex;
    height: 82%;
    flex-direction: column;
    justify-content: space-between;
  }

  /* ------------ Header ------------*/
  #header {
    background-color: #5D5323;
    padding-top: 1.5vh;
    padding-bottom: 1vh;
    /* position: sticky; */
    display: flex;
    justify-content: space-between;

    top: 0;
    max-height: 3vh;
  }
  #title {
    color: black;
    margin-right: 25%;
  }
  

  /* ------------ Progression Container ------------*/
  #progressContainer {
    display: flex;
    justify-content: space-around;
    background-color: gray;
    border: double;
  }

  #circle {
    width: 2rem;
    height: 2rem;
    border-radius: 25px;
    background-color: yellow;
  }

  #selectedCircle {
    width: 2rem;
    height: 2rem;
    border-radius: 25px;
    background: red;
  }

  #clearedCircle {
    width: 2rem;
    height: 2rem;
    border-radius: 25px;
    background: black;
  }

  /* ------------ Sprites Container ------------*/
 
  #spritesContainer {
    display: flex;
    flex: 1;
    flex-direction: row;
    justify-content: space-around;
    border-style: hidden double hidden double;
  }
  #playerSprite {
    width: 50%;
    content: url("icons/mageSprite.svg");
  }
  #enemySprite {
    width: 50%;
    content: url("icons/mageSpriteFlipped.svg");
  }

  /* ------------ Action and Health Containers ------------*/
  #actionContainer {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    border-style: hidden double hidden double;
    background-color: black;
  }
  #player-action {
    color: lightgreen;
  }
  #enemy-action {
    color: lightcoral;
  }

  #charaContainer {
    display: flex;
    justify-content: space-between;
    position: relative;
    border-style: double;
  }
  #hpContainer {
    /* background-image: url("icons/healthBorder1.svg");
    background-repeat: no-repeat;
    background-size: cover; */
    
    background-color: gray;
    width: 50%;
    border-style: solid dashed solid solid;
    padding-top: 1rem;
    padding-bottom: 1rem;

    text-align: center;

    display: flex;
    flex-direction: column;
  }
  .meterCont {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    padding-left: 1rem;
    padding-right: 1rem;
  }
  .meter {
    height: 2rem;
    width: 4rem;
  }
  #player-hp, #player-mp, #enemy-hp {
    padding-top: 1rem;
    font-size: 1rem;
  }
  /* Set Mp Meter to blue */
  ::-webkit-meter-bar {
    background: black;
  }
  #playerMp-meter::-webkit-meter-optimum-value {
    background: blue;
  }
  #playerMp-meter::-webkit-meter-suboptimum-value {
    background: blue;
  }
  #playerMp-meter::-moz-meter-bar {
    background: blue;
  }


  #enemyContainer {
    /* background-image: url("icons/healthBorder2.svg");
    background-repeat: no-repeat;
    background-size: cover; */

    background-color: gray;
    width: 50%;
    border-style: solid solid solid hidden;
    padding-top: 1rem;
    padding-bottom: 1rem;

    text-align: center;

    display: flex;
    flex-direction: column;
  }

  /* ------------ Footer ------------*/
  #footer {
    background-color: #5D5323;
    position: relative;
    display: flex;
    justify-content: space-evenly;
    border: double;
  }
  
  .btn {
    background-color: gray;
    border-radius: 50%;
    border: none;
    padding: 2vh;
  }

  /* Popup container
    NOTES: display set to relative, change to absolute when finished testing
   */
  .popup {
    position: relative; 
    display: inline-block;
    cursor: pointer;
  }

  /* Popup */
  .popup .popuptext {
    display: flex;
    flex-direction: column;
    visibility: hidden;
    width: 160px;
    background-color: #555;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 8px 0;
    position: absolute;
    z-index: 1;
    transform: translateX(50%);
  }
  .popup .popuptext::after {
    content: "";
    position: absolute;
    border-width: 5px;
    border-style: solid;
    border-color: #555 transparent transparent transparent;
  }

  /* Show popup */
  .popup .show {
    visibility: visible;
    -webkit-animation: fadeIn 1s;
    animation: fadeIn 1s;
  }

  /* Create animation
  NOTE: ask why it needs to be rewrote twice?
   */
  @-webkit-keyframes fadeIn {
    from {opacity: 0;}
    to {opacity: 1;}
  }

  @keyframes fadeIn {
    from {opacity: 0;}
    to {opacity: 1;}
  }
}